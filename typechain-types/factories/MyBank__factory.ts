/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyBank, MyBankInterface } from "../MyBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_balance",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_amount",
        type: "int256",
      },
    ],
    name: "deposite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountDetail",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_amount",
        type: "int256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161051f38038061051f8339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186600182028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291905050508160009080519060200190610111929190610120565b508060018190555050506101bd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016157805160ff191683800117855561018f565b8280016001018555821561018f579182015b8281111561018e578251825591602001919060010190610173565b5b50905061019c91906101a0565b5090565b5b808211156101b95760008160009055506001016101a1565b5090565b610353806101cc6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312065fe014610051578063314ec99f1461006f5780635bdb3a411461009d5780637e62eab814610127575b600080fd5b610059610155565b6040518082815260200191505060405180910390f35b61009b6004803603602081101561008557600080fd5b810190808035906020019092919050505061015f565b005b6100a56101e8565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101536004803603602081101561013d57600080fd5b8101908080359060200190929190505050610294565b005b6000600154905090565b600081136101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4465706f73697465206d757374203e203000000000000000000000000000000081525060200191505060405180910390fd5b8060016000828254019250508190555050565b6060600080600154818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102855780601f1061025a57610100808354040283529160200191610285565b820191906000526020600020905b81548152906001019060200180831161026857829003601f168201915b50505050509150915091509091565b6000811361030a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4465706f73697465206d757374203e203000000000000000000000000000000081525060200191505060405180910390fd5b806001600082825403925050819055505056fea26469706673582212200dfec502db84cc3ee6240a91eb642bfda7116d335fa4a955cd11d0a196ab15aa64736f6c63430007030033";

type MyBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyBank__factory extends ContractFactory {
  constructor(...args: MyBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyBank";
  }

  deploy(
    _name: string,
    _balance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyBank> {
    return super.deploy(_name, _balance, overrides || {}) as Promise<MyBank>;
  }
  getDeployTransaction(
    _name: string,
    _balance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _balance, overrides || {});
  }
  attach(address: string): MyBank {
    return super.attach(address) as MyBank;
  }
  connect(signer: Signer): MyBank__factory {
    return super.connect(signer) as MyBank__factory;
  }
  static readonly contractName: "MyBank";
  public readonly contractName: "MyBank";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyBankInterface {
    return new utils.Interface(_abi) as MyBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyBank {
    return new Contract(address, _abi, signerOrProvider) as MyBank;
  }
}
